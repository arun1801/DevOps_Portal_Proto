node("docker_hybris")
{
 stage("Hybris Docker containers Deployment | DEV Machine")
 {
  def remote = [:]
  remote.name = 'dev-box'
  remote.host = '10.0.2.4'
  remote.user = 'root'
  remote.password = '1234'
  remote.allowAnyHosts = true
  println "Stop and remove all the already running containers.."
  sshCommand remote: remote, command: "docker stop \$(docker ps -q)"
  sshCommand remote: remote, command: "docker rm \$(docker ps -q)"
  sshCommand remote: remote, command: "ls -lrt"
  def mysql_container = 'docker run -d -v /opt/hybris/mysql/lib:/var/lib/mysql --name hybris.c.mysql arunsingh1801/hybris-mysql:latest'
  def solr_container = 'docker run -d -v /opt/hybris/solr/data:/opt/solr-standalone/data --name hybris.c.solr arunsingh1801/hybris-solr'
  def hybris_media_container = "docker run -d -e y_tomcat_http_port=8080 -e y_tomcat_ssl_port=8443 -e CATALINA_JAVA_OPTS="-Xms1500m -Xmx1500m -XX\:MaxPermSize=350M -ea -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dorg.tanukisoftware.wrapper.WrapperManager.mbean=true -Dfile.encoding=UTF-8" -e TOMCAT_SERVER_XML="server_proxy_nossl.xml" -e TC_HTTP_PROXY_PORT=8080 -e TC_HTTP_REDIRECT_PORT=8443 -e TC_HTTPS_PROXY_PORT=8443 -v /opt/hybris/acc_medias:/etc/hybris/data/media --env-file ./acc_env --link hybris.c.mysql:mysql --link hybris.c.solr:solr --name hybris.c.acc1 arunsingh1801/y.i.accelerator"
  sshCommand remote: remote, command: "mkdir -p /opt/hybris/mysql/lib"
  sshCommand remote: remote, command: "${mysql_container}"
  sshCommand remote: remote, command: "mkdir -p /opt/hybris/solr/data"
  sshCommand remote: remote, command: "${solr_container}"
  sshCommand remote: remote, command: "mkdir -p /opt/hybris/acc_medias"
  sshCommand remote: remote, command: "${hybris_media_container}"
}
}
